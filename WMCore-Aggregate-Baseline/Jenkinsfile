pipeline {
    agent {
        label 'cms-dmwm-el9'
    }

    environment {
        CODE_REPO = "WMCore"
        WMCORE_REPO = "dmwm"
    }

    stages {
        stage('Setup') {
            steps {
                cleanWs()

                copyArtifacts filter: 'artifacts/nosetest*.xml', fingerprintArtifacts: true, projectName: 'WMCore-Unittest-Baseline', selector: lastWithArtifacts(), target: 'artifacts'

                sh '''
                echo "$(TZ=GMT date): Job name is $JOB_NAME"

                echo "Creating a venv at $WORKSPACE and install dependencies"
                python3 -m venv .
                $WORKSPACE/bin/pip install PyGithub xunitparser
                '''

                git branch: 'main', poll: false, url: 'https://github.com/d-ylee/jenkins-test'
            }
        }
        stage('Compare tests') {
            steps {
                withCredentials([string(credentialsId: 'd0bc4ba6-d9c5-4668-9839-1b7ff6f795fe', variable: 'DMWMBOT_TOKEN')]) {
                    sh '''
                    ls $WORKSPACE

                    echo "$(TZ=GMT date): comparing tests..."

                    $WORKSPACE/bin/python $WORKSPACE/jenkins-test/docker/wmcore-dev/ContainerScripts/CompareTests.py nosetestspy3

                    pushd code
                    `git tag |grep JENKINS| sort | tail -1 > LatestTag`
                    popd
                    '''
                }
            }
        }
    }
}